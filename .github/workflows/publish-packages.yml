name: Publish packages

on:
  push:
    # Push to master updates the latest snapshot (HZ_VERSION taken from pom.xml)
    branches:
      - master
    # Push of a matching tag (v*, e.g. v5.0.2) starts build with
    # - HZ_VERSION extracted from pom.xml
    # - PACKAGE_VERSION extracted from the tag
    tags:
      - 'v*'
  pull_request:
    types: [ opened, synchronize, edited ]
  workflow_dispatch:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for, this is the Maven version - e.g.: 5.0.2 or 5.1-SNAPSHOT'
        required: true

env:
  EVENT_NAME: ${{ github.event_name }}

# Constant for now - should ensure single build, maybe we can limit this to something from github.*
concurrency: single-build

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
        distribution: ['hazelcast', 'hazelcast-enterprise']
    env:
      HZ_VERSION: ${{ github.event.inputs.HZ_VERSION }}
      HZ_DISTRIBUTION: ${{ matrix.distribution }}
      PUBLISH: "true"
      ARTIFACTORY_SECRET: ${{ secrets.ARTIFACTORY_SECRET }}
      DEVOPS_PRIVATE_KEY: ${{ secrets.DEVOPS_PRIVATE_KEY }}
      BINTRAY_PASSPHRASE: ${{ secrets.BINTRAY_PASSPHRASE }}
    defaults:
      run:
        working-directory: ./hazelcast-command-line
    outputs:
      package_version: ${{ steps.package_version.outputs.package_version }}
    name: CLI Release Automation
    steps:
      - name: Checkout hazelcast-command-line repo
        uses: actions/checkout@v2.3.2
        with:
          path: 'hazelcast-command-line'

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - name: Set HZ_VERSION
        run: |
          if [ -z "${{ env.HZ_VERSION }}" ]; then
            echo "HZ_VERSION=$(mvn help:evaluate -Dexpression=hazelcast.version -q -DforceStdout)" >> $GITHUB_ENV
          fi

      - name: Set PACKAGE_VERSION
        id: package_version
        # If the ref is version (e.g. v5.0.1) tag then use it as package version,
        # otherwise use HZ_VERSION for package version (e.g 5.1-SNAPSHOT)
        run: |
          if [[ "${{ github.ref }}" == "v"* ]]; then
            PACKAGE_VERSION=$(echo ${{ github.ref }} | cut -c 12-)
          else
            PACKAGE_VERSION=${{ env.HZ_VERSION }}
          fi
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo ::set-output name=package_version::$PACKAGE_VERSION

      - name: Download the distribution tar.gz file
        run: |
          HZ_PACKAGE_URL=$(mvn --batch-mode dependency:copy -Dartifact=com.hazelcast:${HZ_DISTRIBUTION}-distribution:${HZ_VERSION}:tar.gz -DoutputDirectory=./ -Dmdep.useBaseVersion=true | grep 'Downloaded from' | grep -Eo 'https://[^ >]+${HZ_DISTRIBUTION}-distribution-${HZ_VERSION}.tar.gz')
          echo "HZ_PACKAGE_URL=$HZ_PACKAGE_URL" >> $GITHUB_ENV

      - name: Create & Upload DEB package
        run: |
          ./build-deb-package.sh

      - name: Create & Sign & Upload RPM package
        run: |
          ./build-rpm-package.sh

      - name: Get homebrew repository
        run: |
          ./common.sh
          echo "BREW_GIT_REPO_NAME=$BREW_GIT_REPO_NAME" >> $GITHUB_ENV

      - name: Checkout homebrew-hz repo
        uses: actions/checkout@v2.3.1
        with:
          repository: ${{ env.BREW_GIT_REPO_NAME }}
          ref: master
          token: ${{ secrets.DEVOPS_SECRET }}
          path: 'homebrew-hz'

      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Change the artifact in homebrew-hz
        run: |
          ./build-homebrew-package.sh

      - name: Commit changes & Push to homebrew-hz repo
        run: |
          source common.sh
          brew_package_version "${{ env.PACKAGE_VERSION }}"
          
          cd ../homebrew-hz
          git config --global user.name 'devOpsHazelcast'
          git config --global user.email 'devops@hazelcast.com'
          git add Aliases
          git add ${HZ_DISTRIBUTION}@${BREW_PACKAGE_VERSION}.rb
          if [[ `git status --porcelain --untracked-files=no` ]]; then
            git commit -am "Hazelcast Command Line ${{ env.PACKAGE_VERSION }} release"
            git pull --rebase
            git push
          else
            echo "No changes, this is probably a re-run."
          fi

  verify-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [ 'hazelcast', 'hazelcast-enterprise' ]
    env:
      HZ_VERSION: ${{ github.event.inputs.HZ_VERSION }}
      HZ_DISTRIBUTION: ${{ matrix.distribution }}
      HZ_LICENSEKEY: ${{ secrets.HZ_LICENSEKEY }}
    needs: build
    name: CLI Release DEB Verification
    steps:
      - uses: actions/checkout@v2.3.2

      - name: Install CLI from deb
        run: |
          source ./common.sh
          wget -qO - https://repository.hazelcast.com/api/gpg/key/public | sudo apt-key add -
          echo "deb ${DEBIAN_REPO_BASE_URL} ${PACKAGE_REPO} main" | sudo tee -a /etc/apt/sources.list
          sudo apt update && sudo apt install ${{ env.HZ_DISTRIBUTION}}=${{ needs.build.outputs.package_version }}
          HAZELCAST_CONFIG="${GITHUB_WORKSPACE}/config/integration-test-hazelcast.yaml" hz-start &

      - name: Check Hazelcast health
        run: |
          ./check-hazelcast-health.sh

  verify-rpm:
    runs-on: ubuntu-latest
    container: centos:latest
    strategy:
      matrix:
        distribution: [ 'hazelcast', 'hazelcast-enterprise' ]
    env:
      HZ_VERSION: ${{ github.event.inputs.HZ_VERSION }}
      HZ_DISTRIBUTION: ${{ matrix.distribution }}
      HZ_LICENSEKEY: ${{ secrets.HZ_LICENSEKEY }}
    needs: build
    name: CLI Release RPM Verification
    steps:
      - uses: actions/checkout@v2.3.2

      - name: Install CLI from rpm
        run: |
          source ./common.sh
          yum install -y wget
          wget ${RPM_REPO_BASE_URL}/${PACKAGE_REPO}/hazelcast-rpm-${PACKAGE_REPO}.repo -O hazelcast-rpm-${PACKAGE_REPO}.repo
          mv hazelcast-rpm-${PACKAGE_REPO}.repo /etc/yum.repos.d/          
          yum install -y ${{ env.HZ_DISTRIBUTION}}-${RPM_PACKAGE_VERSION}
          HAZELCAST_CONFIG="${GITHUB_WORKSPACE}/config/integration-test-hazelcast.yaml" hz-start &

      - name: Check Hazelcast health
        run: |
          ./check-hazelcast-health.sh

  verify-homebrew:
    runs-on: macos-latest
    strategy:
      matrix:
        distribution: [ 'hazelcast', 'hazelcast-enterprise' ]
    needs: build
    name: CLI Release Homebrew Verification
    steps:
      - uses: actions/checkout@v2.3.2

      - name: Install CLI from homebrew
        run: |
          source ./common.sh
          brew tap ${BREW_REPO_NAME}
          brew install hazelcast@$BREW_PACKAGE_VERSION

      - name: Run CLI
        run: HAZELCAST_CONFIG="${GITHUB_WORKSPACE}/config/integration-test-hazelcast.yaml" hz-start &

      - name: Check Hazelcast health
        run: |
          ./check-hazelcast-health.sh

